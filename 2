# Define groups
$denyGroup = "Deny Group"
$internetGroups = @("Internet1", "Internet3", "Internet4", "Internet5")

# Get all service accounts (Assuming service accounts follow a naming pattern)
$svcAccounts = Get-ADUser -Filter {Name -like "svc*"} -Properties MemberOf

# Prepare output array
$results = @()

# Filter and process accounts
foreach ($account in $svcAccounts) {
    $groups = $account.MemberOf | Get-ADGroup | Select-Object -ExpandProperty Name

    # Check membership conditions
    $hasDeny = $groups -contains $denyGroup
    $hasInternet = $groups | Where-Object { $_ -in $internetGroups }

    # Account should either:
    # 1. Not be in the Deny Group and not in any Internet group
    # 2. Be in the Deny Group but NOT in any Internet groups
    # 3. Be in at least one Internet group but NOT in the Deny Group
    if ((!$hasDeny -and !$hasInternet) -or ($hasDeny -and !$hasInternet) -or (!$hasDeny -and $hasInternet)) {
        # Add to results
        $results += [PSCustomObject]@{
            AccountName = $account.SamAccountName
            Groups      = ($groups -join "; ")
        }
    }
}

# Export results to CSV
$csvFilePath = "C:\Temp\ServiceAccounts.csv"
$results | Export-Csv -Path $csvFilePath -NoTypeInformation

Write-Host "CSV file created at: $csvFilePath"





<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Application Deprecated</title>
  <script>
    // Auto-redirect after 5 seconds to the new application URL
    setTimeout(function() {
      window.location.href = "https://new-application-link.com";
    }, 5000);
  </script>
</head>
<body>
  <h2>Application Deprecated</h2>
  <p>This application is no longer available. You will be redirected to the new application shortly.</p>
  <p>If not redirected, <a href="https://new-application-link.com">click here</a>.</p>
</body>
</html>
