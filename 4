# ====== Configuration ======
$outputPath = "C:\Temp\AD_Users_Output.csv"
$logPath    = "C:\Temp\AD_Users_Script.log"
$groupsToCheck = @("phase1", "phase2", "inscope")
# Service account filter
$adServer = "corp.google.com"
$userFilter = {
    Enabled -eq $true -and (
        (Company -like "Resource*") -or
        (Company -eq "Resource-Service") -or
        (Company -eq "Resource-Admin")
    )
}
# ===========================

function Write-Log {
    param($msg, $level="INFO")
    $timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
    $line = "[$timestamp][$level] $msg"
    Add-Content -Path $logPath -Value $line
    Write-Host $line
}

# ====== Script Start ======
Remove-Item $logPath -ErrorAction SilentlyContinue
Write-Log "SCRIPT STARTED"

# 1. Reference groups
$groupInfo = @{}
foreach ($group in $groupsToCheck) {
    Write-Log "Looking for group '$group'..."
    $groupObj = Get-ADGroup -Server $adServer -Identity $group -ErrorAction SilentlyContinue
    if ($groupObj) {
        $groupInfo[$group] = $groupObj.DistinguishedName
        Write-Log "Found group: $group"
    } else {
        Write-Log "Group '$group' not found!" "WARN"
    }
}

# 2. Service account user query with specified filter
Write-Log "Querying service accounts with company filter..."
$users = Get-ADUser -Server $adServer -Filter $userFilter -Properties samaccountname,manager,whenCreated,pwdlastset,memberOf
Write-Log ("Found {0} users matching service account filter." -f $users.Count)

# --- Rest of your script logic for group checks, member lookups, output, etc. ---
